<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">

<!-- Cropper.js JavaScript -->


    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Corona Admin</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css">
    <!-- endinject -->
    <!-- Plugin css for this page -->
   
    <link rel="stylesheet" href="/assets/vendors/owl-carousel-2/owl.theme.default.min.css">
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <!-- Layout styles -->
    <link rel="stylesheet" href="/assets/css/style.css">
    <style>
      .nav-item{
        cursor: pointer;
      }
      .swal_title{
        color: black !important;
      }
      .report-controls {
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .btn-group .btn {
        border-radius: 4px;
        margin: 0 2px;
        transition: all 0.3s ease;
      }

      .btn-group .btn:hover {
        transform: translateY(-1px);
      }

      .btn-group .btn.active {
        background: #0d6efd;
        color: white;
      }

      .input-group {
        min-width: 200px;
      }

      .card {
        transition: transform 0.3s ease;
      }

    

      .table-dark {
        border-radius: 8px;
        overflow: hidden;
      }

      .table-dark thead th {
        border-top: none;
        background: rgba(255, 255, 255, 0.05);
      }

      .gap-2 {
        gap: 0.5rem;
      }

      .gap-3 {
        gap: 1rem;
      }

      .btn-gradient-success {
        background: linear-gradient(to right, #84d9d2, #07cdae);
        border: none;
      }

      .btn-gradient-primary {
        background: linear-gradient(to right, #84a7d9, #0766cd);
        border: none;
      }
    </style>
    <!-- End layout styles -->
    <link rel="shortcut icon" href="/assets/images/favicon.png" />
  </head>
  <body>
    <div class="container-scroller">
      <!-- partial:partials/_sidebar.html -->
      <nav class="sidebar sidebar-offcanvas" id="sidebar">
        <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
          <a class="sidebar-brand brand-logo" href="/index.html"><img src="/assets/images/logo.svg" alt="logo" /></a>
          <a class="sidebar-brand brand-logo-mini" href="/index.html"><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
        </div>
        <ul class="nav">
          
         
          <li class="nav-item nav-category">
            <span class="nav-link">Navigation</span>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="dashboard()">
              <span class="menu-icon">
                <i class="mdi mdi-file-document-box"></i>
              </span>
              <span class="menu-title">dashboard</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="loadusermanagment()">
              <span class="menu-icon">
                <i class="mdi mdi-account-multiple"></i>
              </span>
              <span class="menu-title">User Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="laodordermanagment()">
              <span class="menu-icon">
                <i class="mdi mdi-cart"></i>
              </span>
              <span class="menu-title">Order Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="loadcatogory()">
              <span class="menu-icon">
                <i class="mdi mdi-format-list-bulleted"></i>
              </span>
              <span class="menu-title">Category Management</span>
            </a>
          </li>

          <li class="nav-item menu-items">
            <a class="nav-link" onclick="productload()">
              <span class="menu-icon">
                <i class="mdi mdi-package-variant"></i>
              </span>
              <span class="menu-title">Product Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="coupnload()">
              <span class="menu-icon">
                <i class="mdi mdi-ticket-percent"></i>
              </span>
              <span class="menu-title">Coupon Management</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" onclick="loadReturnManagement()">
              <span class="menu-icon">
                <i class="mdi mdi-undo-variant"></i>
              </span>
              <span class="menu-title">Return Management</span>
            </a>
          </li>
        </ul>

      </nav>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_navbar.html -->
        <nav class="navbar p-0 fixed-top d-flex flex-row">
          <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
            <a class="navbar-brand brand-logo-mini" href="/index.html"><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
          </div>
          <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
            <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
              <span class="mdi mdi-menu"></span>
            </button>
            <ul class="navbar-nav w-100">
              <li class="nav-item w-100">
                <form class="nav-link mt-2 mt-md-0 d-none d-lg-flex search">
                  <input id="searchBox" type="text" class="form-control" placeholder="Search products" oninput="filterRows()">
                </form>
              </li>
            </ul>
            <ul class="navbar-nav navbar-nav-right">
              
              <li class="nav-item nav-settings d-none d-lg-block">
                <a class="nav-link" href="#">
                  <i class="mdi mdi-view-grid"></i>
                </a>
              </li>
              <li class="nav-item dropdown border-left">
                <a class="nav-link count-indicator dropdown-toggle" id="messageDropdown" href="#" data-toggle="dropdown" aria-expanded="false">
                  <i class="mdi mdi-email"></i>
                  <span class="count bg-success"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="messageDropdown">
                  <h6 class="p-3 mb-0">Messages</h6>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="/assets/images/faces/face4.jpg" alt="image" class="rounded-circle profile-pic">
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject ellipsis mb-1">Mark send you a message</p>
                      <p class="text-muted mb-0"> 1 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="/assets/images/faces/face2.jpg" alt="image" class="rounded-circle profile-pic">
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject ellipsis mb-1">Cregh send you a message</p>
                      <p class="text-muted mb-0"> 15 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="/assets/images/faces/face3.jpg" alt="image" class="rounded-circle profile-pic">
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject ellipsis mb-1">Profile picture updated</p>
                      <p class="text-muted mb-0"> 18 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <p class="p-3 mb-0 text-center">4 new messages</p>
                </div>
              </li>
              <li class="nav-item dropdown border-left">
                <a class="nav-link count-indicator dropdown-toggle" id="notificationDropdown" href="#" data-toggle="dropdown">
                  <i class="mdi mdi-bell"></i>
                  <span class="count bg-danger"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="notificationDropdown">
                  <h6 class="p-3 mb-0">Notifications</h6>
                  <div class="dropdown-divider"></div>
                  <% notifications.forEach(notification => { %>
                    <a class="dropdown-item preview-item" onclick="getreturndata('<%= notification.returnId %>',true)">
                      <div class="preview-thumbnail">
                        <div class="preview-icon bg-dark rounded-circle">
                          <i class="<%= notification.icon %> <%= notification.iconClass %>"></i>
                        </div>
                      </div>
                      <div class="preview-item-content">
                        <p class="preview-subject mb-1"><%= notification.title %></p>
                        <p class="text-muted ellipsis mb-0"><%= notification.message %></p>
                      </div>
                    </a>
                  <% }); %>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-dark rounded-circle">
                        <i class="mdi mdi-check-circle text-success"></i>
                      </div>
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject mb-1">Coupon ABDC Fully Utilized</p>
                      <p class="text-muted ellipsis mb-0"> Maximum user limit reached for this coupon </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-dark rounded-circle">
                        <i class="mdi mdi-clock-alert text-danger"></i>
                      </div>
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject mb-1">Coupon SUMMER23 Expired</p>
                      <p class="text-muted ellipsis mb-0"> The coupon has reached its expiration date </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <p class="p-3 mb-0 text-center">See all notifications</p>
                </div>
              </li>
              <li class="nav-item dropdown">
                <a class="nav-link" id="profileDropdown" href="#" data-toggle="dropdown">
                  <div class="navbar-profile">
                    
                    <p class="mb-0 d-none d-sm-block navbar-profile-name"><%= adminName%></p>
                    <i class="mdi mdi-menu-down d-none d-sm-block"></i>
                  </div>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="profileDropdown">
                  <h6 class="p-3 mb-0">Profile</h6>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-dark rounded-circle">
                        <i class="mdi mdi-settings text-success"></i>
                      </div>
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject mb-1">Settings</p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-dark rounded-circle">
                        <i class="mdi mdi-logout text-danger"></i>
                      </div>
                    </div>
                    <div class="preview-item-content">
                      <p class="preview-subject mb-1">Log out</p>
                    </div>
                  </a>
                  
                </div>
              </li>
            </ul>
            <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
              <span class="mdi mdi-format-line-spacing"></span>
            </button>
          </div>
        </nav>
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="row">
              <div class="col-12 grid-margin">
                <div class="card">
                  <div id="download" class="card-body">
                    <h4 class="card-title mb-4">
                      <i class="mdi mdi-chart-line text-primary"></i> 
                      Sales Analytics
                    </h4>
                    
                    <!-- Report Type Selection -->
                    <div class="report-controls p-3 bg-dark rounded mb-4">
                      <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div class="btn-group" role="group">
                          <button type="button" class="btn btn-outline-primary active" onclick="generateReport('daily','button')">
                            <i class="mdi mdi-calendar-today"></i> Daily
                          </button>
                          <button type="button" class="btn btn-outline-primary" onclick="generateReport('weekly','button')">
                            <i class="mdi mdi-calendar-week"></i> Weekly
                          </button>
                          <button type="button" class="btn btn-outline-primary" onclick="generateReport('monthly','button')">
                            <i class="mdi mdi-calendar-month"></i> Monthly
                          </button>
                          <button type="button" class="btn btn-outline-primary" onclick="generateReport('yearly','button')">
                            <i class="mdi mdi-calendar"></i> Yearly
                          </button>
                        </div>

                        <!-- Date Range Selection -->
                        <div class="d-flex gap-3 mt-3 mt-md-0">
                          <div class="input-group">
                            <div class="input-group-prepend">
                              <span class="input-group-text bg-primary text-white">From</span>
                            </div>
                            <input onchange="customdatereport()" type="date" class="form-control" id="fromDate">
                          </div>
                          <div class="input-group">
                            <div class="input-group-prepend">
                              <span class="input-group-text bg-primary text-white">To</span>
                            </div>
                            <input onchange="customdatereport()" type="date" class="form-control" id="toDate">
                          </div>
                        </div>
                      </div>
                    </div>

                    <!-- Quick Stats Cards -->
                    <div class="row mb-4">
                      <div class="col-md-3">
                        <div class="card bg-gradient-primary text-white">
                          <div class="card-body">
                            <h6 class="card-title mb-1">Total Orders</h6>
                            <h3 class="mb-0" id="totalOrders">0</h3>
                            <small class="text-white-50">This period</small>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-3">
                        <div class="card bg-gradient-success text-white">
                          <div class="card-body">
                            <h6 class="card-title mb-1">Total Revenue</h6>
                            <h3 class="mb-0" id="totalRevenue">$0</h3>
                            <small class="text-white-50">This period</small>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-3">
                        <div class="card bg-gradient-danger text-white">
                          <div class="card-body">
                            <h6 class="card-title mb-1">Returned Orders</h6>
                            <h3 class="mb-0" id="returnedOrders">0</h3>
                            <small class="text-white-50">This period</small>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-3">
                        <div class="card bg-gradient-warning text-white">
                          <div class="card-body">
                            <h6 class="card-title mb-1">Cancelled Orders</h6>
                            <h3 class="mb-0" id="cancelledOrders">0</h3>
                            <small class="text-white-50">This period</small>
                          </div>
                        </div>
                      </div>
                    </div>

                    <!-- Sales Data Table -->
                    <div class="row mb-4" id="graphdiv">
                      <div class="col-12">
                        <div class="card bg-dark">
                          <div id="graph" class="card-body">
                            <canvas id="salesChart" style="width: 100%; height: 300px;"></canvas>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div class="table-responsive">
                      <table class="table table-hover table-dark" id="salesTable">
                        <thead>
                          <tr>
                            <th>Date</th>
                            <th>Orders</th>
                            <th>Total Sales</th>
                            <th>Revenue</th>
                            <th>Growth</th>
                          </tr>
                        </thead>
                        <tbody id="salesTableBody">
                          <!-- Data will be populated dynamically -->
                        </tbody>
                      </table>
                    </div>

                    <!-- Export Buttons -->
                    <div class="mt-4 d-flex justify-content-end gap-2">
                      <button class="btn btn-outline-light" onclick="exportToPDF()">
                        <i class="mdi mdi-file-pdf text-danger"></i> Export PDF
                      </button>
                      <button class="btn btn-outline-light" onclick="downloadExcel()">
                        <i class="mdi mdi-file-excel text-success"></i> Export Excel
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Return Approval Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1" role="dialog" aria-labelledby="returnModalLabel" aria-hidden="true">
      <div class="modal-dialog" style="max-width: 800px;" role="document">
        <div class="modal-content bg-dark text-white">
          <div class="modal-header border-bottom border-secondary">
            <h5 class="modal-title" id="returnModalLabel">
              <i class="mdi mdi-undo-variant text-warning mr-2"></i>
              Return Request #<span id="returnRequestId"></span>
            </h5>
            <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="col-md-6">
                <div class="card bg-gradient-dark p-3 mb-3">
                  <h6 class="mb-3 text-primary">
                    <i class="mdi mdi-package-variant"></i> Product Information
                  </h6>
                  <p><strong>Product Name:</strong> <span id="productName"></span></p>
                  <p><strong>Variant:</strong> Size: <span id="variantSize"></span>, Color: <span id="variantColor"></span></p>
                  <p><strong>Price:</strong> ₹<span id="productPrice"></span></p>
                  <div class="product-images mt-3">
                    <h6 class="mb-2 text-muted">Product Images</h6>
                    <div id="productImageContainer" class="d-flex gap-2">
                      <!-- Images will be inserted dynamically -->
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="card bg-gradient-dark p-3">
                  <h6 class="mb-3 text-info">
                    <i class="mdi mdi-information"></i> Return Details
                  </h6>
                  <p><strong>Order ID:</strong> <span id="orderId" class="text-warning"></span></p>
                  <p><strong>Return Date:</strong> <span id="returnDate"></span></p>
                  <p><strong>Return Reason:</strong> <span id="returnReason" class="badge badge-danger"></span></p>
                  <p><strong>Current Status:</strong> <span id="returnStatus" class="badge badge-warning"></span></p>
                  
                  <div class="mt-3">
                    <h6 class="text-muted mb-2">Customer Notes</h6>
                    <p id="customerNotes" class="bg-dark p-2 rounded"></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer border-top border-secondary">
            <div class="d-flex justify-content-end w-100">
              <button type="button" class="btn btn-danger mr-2" id="rejectReturn" onclick="updatereturnstatus('rejected')">
                <i class="mdi mdi-close-circle"></i> Reject Return
              </button>
              <button type="button" class="btn btn-success" id="approveReturn" onclick="updatereturnstatus('approved')">
                <i class="mdi mdi-check-circle"></i> Approve Return
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- container-scroller -->
    <!-- plugins:js -->
    <script src="/assets/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="/assets/vendors/chart.js/Chart.min.js"></script>

   
    

    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="/assets/js/off-canvas.js"></script>
    <script src="/assets/js/hoverable-collapse.js"></script>
  
    <script src="/assets/js/settings.js"></script>
    <script src="/assets/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="/assets/js/dashboard.js"></script>
    <!-- End custom js for this page -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
     <script src="/js/dashboard.js"></script>
<!-- Load only when needed -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>

<script>
function updatereturnstatus(status) {
  const returnid = document.getElementById('returnRequestId').textContent;
 
  fetch(`/admin/updatereturnstatus`,{
    method: 'POST',
    body: JSON.stringify({returnid: returnid,status: status}),
    headers: {
      'Content-Type': 'application/json'
    }
    
  } )
  .then(response => response.json())
  .then(data => {
    if(data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Return Status Updated',
        text: data.message,
        background: '#191c24',
        color: '#fff'
      });
    }
    $('#returnModal').modal('hide');
  }).catch(error => {
    Swal.fire({
      icon: 'error',
      title: 'Error', 
      text: error.message,
      background: '#191c24',
      color: '#fff'
    });
  });
}

function showReturnModal(returnData) {
    // Populate modal with return data
    document.getElementById('returnRequestId').textContent = returnData.returnId;
    document.getElementById('productName').textContent = returnData.productName;
    document.getElementById('variantSize').textContent = returnData.size;
    document.getElementById('variantColor').textContent = returnData.color;
    document.getElementById('productPrice').textContent = returnData.price;
    document.getElementById('orderId').textContent = returnData.orderId;
    document.getElementById('returnDate').textContent = returnData.returnDate;
    document.getElementById('returnReason').textContent = returnData.reason;
    document.getElementById('returnStatus').textContent = returnData.status;
    document.getElementById('customerNotes').textContent = returnData.customerNotes;

    // Clear existing images
    const imageContainer = document.getElementById('productImageContainer');
    imageContainer.innerHTML = '';

    // Add product images
    returnData.images.forEach(imgSrc => {
        const img = document.createElement('img');
        img.src = imgSrc;
        img.className = 'img-thumbnail';
        img.style = 'width: 80px; height: 80px; object-fit: cover;';
        img.alt = 'Product Image';
        imageContainer.appendChild(img);
    });

    // Show the modal
    $('#returnModal').modal('show');
}

function loadReturnManagement() {
  fetch('/admin/returnmanagment',{method:'get'})
  .then(response => response.text())
  .then(html => {
    document.querySelector('.main-panel').innerHTML = html;
    setActiveNavItem('Return Management')
  }).catch(error => {
    console.error('Error loading return management:', error);
  });
}

function generateReport(period, a, b) {
  // Reset date filter inputs if this is a button click (not custom date range)
  if (a === 'button') {
    const fromDateInput = document.getElementById('fromDate');
    const toDateInput = document.getElementById('toDate');
    fromDateInput.value = '';
    toDateInput.value = '';
    fromDateInput.type = 'date'; // Reset the input type to refresh it
    toDateInput.type = 'date'; // Reset the input type to refresh it
  }
  // Add this at the start of generateReport function
  // Remove active class from all buttons
  document.querySelectorAll('.btn-group .btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Add active class to clicked button
  const clickedButton = document.querySelector(`.btn-group .btn[onclick="generateReport('${period}','button')"]`);
  if (clickedButton) {
    clickedButton.classList.add('active');
  }
  let identifier = null;
  let startDate = new Date('2025-02-13');

  let endDate = new Date();
  if(a && b){
    startDate = new Date(a);
    endDate = new Date(b);
    identifier = 'custom';
  }
  

  fetch(`/admin/generatesalesdata`, {
    method: 'POST',
    body: JSON.stringify({startDate: startDate, endDate: endDate, period: period, identifier: identifier||null}),
    headers: {
      'Content-Type': 'application/json'
    }
  })
  .then(response => response.json())
  .then(data => {
    const salesData = data.salesData;
    const tabledata = data.tabledata;
    
    // Update stats
    document.getElementById('totalOrders').textContent = salesData.totalorders;
    document.getElementById('totalRevenue').textContent = salesData.totalrevenue;
    document.getElementById('returnedOrders').textContent = salesData.returnorders; 
    document.getElementById('cancelledOrders').textContent = salesData.cancelledorders;

    // Update table
    const tableBody = document.getElementById('salesTableBody');
    tableBody.innerHTML = '';
    tabledata.forEach(row => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${row.date}</td>
        <td>${row.orders}</td>
        <td>${row.totalSales}</td>
        <td>${row.revenue}</td>
        <td>${row.growth}</td>
      `;
      tableBody.appendChild(tr);
    });

    // Create chart
    const ctx = document.getElementById('salesChart').getContext('2d');
    
    // Destroy existing chart if it exists
    if (window.salesChart instanceof Chart) {
      window.salesChart.destroy();
    }

    window.salesChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: tabledata.map(row => row.date),
        datasets: [
          {
            label: 'Revenue',
            data: tabledata.map(row => parseFloat(row.revenue.replace('₹', '').replace(/,/g, ''))),
            borderColor: '#0d6efd',
            backgroundColor: 'rgba(13, 110, 253, 0.1)',
            borderWidth: 2,
            tension: 0.4,
            fill: true,
            pointBackgroundColor: '#0d6efd',
            pointBorderColor: '#fff',
            pointBorderWidth: 2,
            pointRadius: 4,
            pointHoverRadius: 6
          },
          {
            label: 'Growth %',
            data: tabledata.map(row => parseFloat(row.growth.replace('%', ''))),
            borderColor: '#198754',
            backgroundColor: 'rgba(25, 135, 84, 0.1)',
            borderWidth: 2,
            tension: 0.4,
            fill: true,
            pointBackgroundColor: '#198754',
            pointBorderColor: '#fff',
            pointBorderWidth: 2,
            pointRadius: 4,
            pointHoverRadius: 6
          },
          {
            label: 'Orders',
            data: tabledata.map(row => row.orders),
            borderColor: '#dc3545',
            backgroundColor: 'rgba(220, 53, 69, 0.1)',
            borderWidth: 2,
            tension: 0.4,
            fill: true,
            pointBackgroundColor: '#dc3545',
            pointBorderColor: '#fff',
            pointBorderWidth: 2,
            pointRadius: 4,
            pointHoverRadius: 6
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        interaction: {
          intersect: false,
          mode: 'index'
        },
        plugins: {
          legend: {
            position: 'top',
            labels: {
              padding: 20,
              font: {
                size: 14,
                weight: 'bold'
              },
              color: '#fff',
              usePointStyle: true,
              pointStyle: 'circle'
            }
          },
          title: {
            display: true,
            text: 'Sales Performance Overview',
            color: '#fff',
            font: {
              size: 20,
              weight: 'bold'
            },
            padding: {
              top: 10,
              bottom: 30
            }
          },
          tooltip: {
            backgroundColor: 'rgba(0, 0, 0, 0.8)',
            titleFont: {
              size: 14,
              weight: 'bold'
            },
            bodyFont: {
              size: 13
            },
            padding: 12,
            cornerRadius: 8,
            displayColors: true,
            callbacks: {
              label: function(context) {
                let label = context.dataset.label || '';
                if (label) {
                  label += ': ';
                }
                if (context.dataset.label === 'Revenue') {
                  label += '₹' + context.parsed.y;
                } else if (context.dataset.label === 'Growth %') {
                  label += context.parsed.y + '%';
                } else {
                  label += context.parsed.y;
                }
                return label;
              }
            }
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: 'rgba(255, 255, 255, 0.1)',
              drawBorder: false
            },
            ticks: {
              color: '#fff',
              font: {
                size: 12
              },
              padding: 10,
              callback: function(value) {
                return value.toLocaleString();
              }
            }
          },
          x: {
            grid: {
              color: 'rgba(255, 255, 255, 0.1)',
              drawBorder: false,
              display: false
            },
            ticks: {
              color: '#fff',
              font: {
                size: 12
              },
              padding: 10,
              maxRotation: 45,
              minRotation: 45
            }
          }
        },
        layout: {
          padding: {
            left: 10,
            right: 25,
            top: 20,
            bottom: 10
          }
        }
      }
    });
  })
  .catch(error => {
    console.error('Error generating sales data:', error);
  });
}

function exportToPDF() {
  // Get report data
  const fromDate = document.getElementById('fromDate').value;
  const toDate = document.getElementById('toDate').value;
  const isCustomDateFilter = fromDate && toDate;
  
  // Get the current active period from the button
  const activePeriodButton = document.querySelector('.btn-group .btn.active');
  const currentPeriod = activePeriodButton ? activePeriodButton.textContent.trim() : 'Daily';

  const reportData = {
    period: currentPeriod, // Always use the actual period
    dateRange: {
      from: fromDate,
      to: toDate
    },
    summary: {
      totalOrders: document.getElementById('totalOrders').textContent,
      totalRevenue: document.getElementById('totalRevenue').textContent,
      returnedOrders: document.getElementById('returnedOrders').textContent,
      cancelledOrders: document.getElementById('cancelledOrders').textContent
    },
    tableData: Array.from(document.querySelectorAll('#salesTable tbody tr')).map(row => ({
      date: row.cells[0].textContent.trim(),
      orders: row.cells[1].textContent.trim(),
      totalSales: row.cells[2].textContent.trim(),
      revenue: row.cells[3].textContent.trim(),
      growth: row.cells[4].textContent.trim()
    }))
  };

  // Create report info section
  const reportInfoContent = [
    {
      text: [
        { text: 'Report Type: ', style: 'reportLabel' },
        { text: reportData.period, style: 'reportValue' }
      ],
      margin: [0, 20, 0, 10],
      alignment: 'center'
    }
  ];

  // Add date range info if custom filter is active
  if (isCustomDateFilter) {
    reportInfoContent.push({
      text: [
        { text: 'Date Range: ', style: 'reportLabel' },
        { 
          text: `${new Date(fromDate).toLocaleDateString()} - ${new Date(toDate).toLocaleDateString()}`,
          style: 'reportValue',
          color: '#3498db'
        }
      ],
      margin: [0, 0, 0, 30],
      alignment: 'center'
    });
  } else {
    // Add extra margin to the report type if no date range
    reportInfoContent[0].margin = [0, 20, 0, 30];
  }

  const content = {
    pageSize: 'A4',
    pageMargins: [40, 60, 40, 60],
    header: {
      stack: [
        {
          text: 'SALES ANALYTICS REPORT',
          style: 'mainHeader',
          margin: [0, 20, 0, 0]
        },
        {
          canvas: [
            {
              type: 'line',
              x1: 40,
              y1: 5,
              x2: 515,
              y2: 5,
              lineWidth: 1,
              lineColor: '#2c3e50'
            }
          ]
        }
      ]
    },
    footer: function(currentPage, pageCount) {
      return {
        stack: [
          {
            canvas: [
              {
                type: 'line',
                x1: 40,
                y1: -5,
                x2: 515,
                y2: -5,
                lineWidth: 1,
                lineColor: '#ecf0f1'
              }
            ]
          },
          {
            columns: [
              {
                text: `Generated on ${new Date().toLocaleString()}`,
                alignment: 'left',
                margin: [40, 10, 0, 0],
                fontSize: 8,
                color: '#7f8c8d'
              },
              {
                text: `Page ${currentPage} of ${pageCount}`,
                alignment: 'right',
                margin: [0, 10, 40, 0],
                fontSize: 8,
                color: '#7f8c8d'
              }
            ]
          }
        ]
      };
    },
    content: [
      ...reportInfoContent,
      
      // Rest of the content remains the same
      {
        columns: [
          {
            stack: [
              { text: 'Total Orders', style: 'statLabel' },
              { text: reportData.summary.totalOrders, style: 'statValue', color: '#3498db' }
            ],
            style: 'statBox'
          },
          {
            stack: [
              { text: 'Total Revenue', style: 'statLabel' },
              { text: reportData.summary.totalRevenue, style: 'statValue', color: '#2ecc71' }
            ],
            style: 'statBox'
          },
          {
            stack: [
              { text: 'Returned Orders', style: 'statLabel' },
              { text: reportData.summary.returnedOrders, style: 'statValue', color: '#e74c3c' }
            ],
            style: 'statBox'
          },
          {
            stack: [
              { text: 'Cancelled Orders', style: 'statLabel' },
              { text: reportData.summary.cancelledOrders, style: 'statValue', color: '#e67e22' }
            ],
            style: 'statBox'
          }
        ],
        columnGap: 20,
        margin: [0, 0, 0, 40]
      },
      {
        text: 'Sales Data Overview',
        style: 'sectionHeader',
        margin: [0, 0, 0, 15]
      },
      {
        table: {
          headerRows: 1,
          widths: ['*', 'auto', 'auto', 'auto', 'auto'],
          body: [
            [
              { text: 'Date', style: 'tableHeader' },
              { text: 'Orders', style: 'tableHeader' },
              { text: 'Total Sales', style: 'tableHeader' },
              { text: 'Revenue', style: 'tableHeader' },
              { text: 'Growth', style: 'tableHeader' }
            ],
            ...reportData.tableData.map((row, i) => [
              { text: row.date, style: i % 2 === 0 ? 'tableCell' : 'tableCellAlt' },
              { text: row.orders, style: i % 2 === 0 ? 'tableCell' : 'tableCellAlt', alignment: 'right' },
              { text: row.totalSales, style: i % 2 === 0 ? 'tableCell' : 'tableCellAlt', alignment: 'right' },
              { text: row.revenue, style: i % 2 === 0 ? 'tableCell' : 'tableCellAlt', alignment: 'right' },
              {
                text: row.growth,
                style: i % 2 === 0 ? 'tableCell' : 'tableCellAlt',
                color: row.growth.includes('+') ? '#27ae60' : row.growth.includes('-') ? '#c0392b' : '#2c3e50',
                alignment: 'right',
                bold: true
              }
            ])
          ]
        }
      }
    ],
    styles: {
      mainHeader: {
        fontSize: 24,
        bold: true,
        alignment: 'center',
        color: '#2c3e50'
      },
      reportLabel: {
        fontSize: 12,
        color: '#7f8c8d',
        bold: true
      },
      reportValue: {
        fontSize: 12,
        color: '#2c3e50',
        bold: true
      },
      sectionHeader: {
        fontSize: 18,
        bold: true,
        color: '#2c3e50',
        margin: [0, 0, 0, 10]
      },
      statBox: {
        alignment: 'center',
        margin: [0, 0, 0, 0],
        backgroundColor: '#f8f9fa',
        padding: 15,
        borderRadius: 5
      },
      statLabel: {
        fontSize: 12,
        color: '#7f8c8d',
        margin: [0, 0, 0, 5],
        alignment: 'center'
      },
      statValue: {
        fontSize: 22,
        bold: true,
        alignment: 'center'
      },
      tableHeader: {
        fontSize: 12,
        bold: true,
        color: '#ffffff',
        fillColor: '#34495e',
        alignment: 'left',
        margin: [5, 8, 5, 8]
      },
      tableCell: {
        fontSize: 11,
        color: '#2c3e50',
        margin: [5, 8, 5, 8],
        backgroundColor: '#ffffff'
      },
      tableCellAlt: {
        fontSize: 11,
        color: '#2c3e50',
        margin: [5, 8, 5, 8],
        backgroundColor: '#f8f9fa'
      }
    }
  };

  try {
    pdfMake.createPdf(content).download(`Sales_Report_${new Date().toISOString().split('T')[0]}.pdf`);
    
    Swal.fire({
      icon: 'success',
      title: 'Success',
      text: 'Sales report PDF generated successfully!',
      background: '#191c24',
      color: '#fff'
    });
  } catch (error) {
    console.error('PDF generation error:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Failed to generate sales report PDF',
      background: '#191c24',
      color: '#fff'
    });
  }
}

function downloadExcel() {
  const table = document.getElementById('salesTable');
  const rows = Array.from(table.querySelectorAll('tr'));
  
  const data = rows.map(row => {
    return Array.from(row.querySelectorAll('th, td')).map(cell => cell.textContent.trim());
  });

  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.aoa_to_sheet(data);
  XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

  try {
    XLSX.writeFile(wb, "table-data.xlsx");
    Swal.fire({
      icon: 'success',
      title: 'Success',
      text: 'Excel file downloaded successfully!',
      background: '#191c24',
      color: '#fff'
    });
  } catch (error) {
    Swal.fire({
      icon: 'error', 
      title: 'Error',
      text: 'Failed to generate Excel file',
      background: '#191c24',
      color: '#fff'
    });
    console.error('Excel generation error:', error);
  }
}

function customdatereport(){
  const fromDate = document.getElementById('fromDate').value;
  const toDate = document.getElementById('toDate').value;
  
  const period = document.querySelector('.btn-group .btn.active').getAttribute('onclick').match(/'(.*?)'/)[1];
  if(fromDate && toDate){
    generateReport(period,fromDate,toDate);
  }
}
generateReport('daily');
</script>
<script src="https://cdn.sheetjs.com/xlsx-0.20.1/package/dist/xlsx.full.min.js"></script>
  </body>
</html>