<!doctype html>
<html class="no-js" lang="en">
	
<!-- Mirrored from template.hasthemes.com/hurst-v1/hurst/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 15 Jan 2025 07:05:43 GMT -->
<head>
	<style>
		body {
    overflow-x: hidden;
    padding-top: 80px;
}

:root {
    --primary: #FFD700;
    --primary-dark: #FFC000;
    --primary-light: #FFF8DC;
    --success: #34a853;
    --warning: #fbbc05;
    --danger: #ea4335;
    --dark: #202124;
    --light: #f8f9fa;
    --border-radius: 12px;
    --shadow: 0 4px 20px rgba(0,0,0,0.08);
}

.e-commerce-header {
    background: white;
    box-shadow: 0 2px 15px rgba(0,0,0,0.08);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    padding: 0.5rem 2rem;
    transition: all 0.3s ease;
}

.header-top {
    height: 70px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
}

.logo-section {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.logo {
    font-size: 1.8rem;
    font-weight: 800;
    white-space: nowrap;
}

.main-nav {
    flex: 1;
}

.nav-links {
    display: flex;
    gap: 1.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
    white-space: nowrap;
}

.nav-links a {
    text-decoration: none;
    color: #444;
    font-weight: 500;
    font-size: 0.95rem;
    padding: 0.5rem 0.8rem;
    border-radius: 6px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.4rem;
}

.nav-links a:hover,
.nav-links a.active {
    color: #DAA520;
    background: var(--primary-light);
}

.dropdown {
    position: relative;
}

.dropdown-content {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background: white;
    min-width: 180px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    border-radius: 8px;
    padding: 0.5rem 0;
    z-index: 1000;
}

.dropdown:hover .dropdown-content {
    display: block;
    animation: fadeIn 0.3s ease;
}

.dropdown-content a {
    padding: 0.8rem 1.2rem;
    display: block;
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 1.2rem;
}

.action-link {
    position: relative;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f8f9fa;
    color: #444;
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

.action-link:hover {
    background: var(--primary-light);
    color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.05);
}

.action-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background: var(--primary);
    color: #333;
    font-size: 0.7rem;
    min-width: 18px;
    height: 18px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 4px;
    border: 2px solid white;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

@media (max-width: 1200px) {
    .nav-links {
        gap: 1rem;
    }
    
    .nav-links a {
        font-size: 0.9rem;
        padding: 0.4rem 0.6rem;
    }
    
    .header-actions {
        gap: 1rem;
    }
}

@media (max-width: 992px) {
    .e-commerce-header {
        padding: 0.5rem 1rem;
    }

    .header-top {
        height: auto;
        flex-wrap: wrap;
        gap: 0.8rem;
        padding: 0.5rem 0;
    }

    .logo-section {
        flex: 0 0 auto;
    }

    .logo {
        font-size: 1.5rem;
    }

    .search-section {
        order: 3;
        flex: 0 0 100%;
        max-width: 100%;
        margin: 0;
    }

    .nav-links {
        font-size: 0.85rem;
        gap: 0.8rem;
    }

    .header-actions {
        gap: 0.8rem;
    }

    .action-link {
        width: 35px;
        height: 35px;
    }
}

@media (max-width: 768px) {
    .nav-links {
        display: none;
    }

    .header-top {
        justify-content: center;
        flex-wrap: nowrap;
        gap: 10px;
        height: 70px;
    }

    /* Hide wishlist and cart icons */
    .action-link[href="/user/wishlist"],
    .action-link[href="/user/cart"] {
        display: none;
    }

    /* Logo on left */
    .logo-section {
        
      
        flex: 0 0 auto;
    }

    /* Search in center */
    .search-section {
        order: 2;
        flex: 0 0 calc(100% - 120px);
        margin: 0 10px;
    }

    /* Profile icon on right */
    .header-actions {
        order: 3;
        margin: 0;
    }

    .action-link[href="/user/profile"] {
        display: flex;
    }

    .search-input::placeholder {
        content: "Search";
    }
    
    .search-input {
        margin-bottom: 0 !important;
        /* Override the default placeholder text for mobile */
        &[placeholder] {
            text-overflow: ellipsis;
            placeholder: "Search";
        }
    }
}

@media (max-width: 480px) {
    .e-commerce-header {
        padding: 0.5rem;
    }

    .logo {
        
        font-size: 1.3rem;
    }

    .action-link {
        width: 32px;
        height: 32px;
    }

    .search-section {
        flex: 0 0 calc(100% - 100px);
        margin: 0 8px;
    }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(-100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.e-commerce-header.scrolled {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 20px rgba(0,0,0,0.1);
    padding: 0.3rem 2rem;
}

.e-commerce-header.scrolled .logo {
    font-size: 1.6rem;
}

.e-commerce-header.scrolled .action-link {
    width: 35px;
    height: 35px;
}

/* Add or modify these styles */
.checkout-header .menu-toggle,
.checkout-header .mobile-menu {
    display: none !important;
}

.checkout-header .logo-section {
    margin: 0 auto;
    text-align: center;
}

.checkout-header .header-top {
    justify-content: center;
}

@media (max-width: 992px) {
    .checkout-header .menu-toggle {
        display: none !important;
    }
}

.search-section {
    flex: 1;
    max-width: 500px;
}

.search-container {
    position: relative;
    width: 100%;
}

.search-form {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
}

.search-input {
    margin-bottom: 0 !important;
    width: 100%;
    height: 44px; /* Increased height for better touch target */
    padding: 0 45px 0 16px; /* Increased right padding to accommodate the icon */
    border: 1px solid #e0e0e0;
    border-radius: var(--border-radius);
    font-size: 0.9rem;
    transition: all 0.3s ease;
    background: #f8f9fa;
    margin: 0;
    line-height: 44px; /* Match the height for vertical centering */
}


.search-input:focus {
    outline: none;
    border-color: var(--primary);
    background: white;
    box-shadow: 0 0 0 3px var(--primary-light);
}

.search-button {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #666;
    cursor: pointer;
    padding: 0 16px;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}


.search-button i {
    font-size: 16px;
}

.search-button:hover {
    color: var(--primary-dark);
}

.search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    margin-top: 5px;
    display: none;
    z-index: 1000;
    max-height: 400px;
    overflow-y: auto;
    padding: 8px 0;
}

.suggestion-item {
    padding: 12px 16px;
    display: flex;
    align-items: center;
    gap: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    border-bottom: 1px solid #f0f0f0;
}

.suggestion-item:last-child {
    border-bottom: none;
}

.suggestion-item:hover {
    background-color: var(--primary-light);
}

.suggestion-item.no-results {
    color: #666;
    text-align: center;
    padding: 20px;
    justify-content: center;
}

.suggestion-item.show-all {
    color: var(--primary-dark);
    font-weight: 600;
    justify-content: center;
    background-color: var(--primary-light);
}

.suggestion-item.show-all:hover {
    background-color: var(--primary-light);
    opacity: 0.9;
}

.suggestion-image {
    width: 40px;
    height: 40px;
    object-fit: cover;
    border-radius: 6px;
}

.suggestion-content {
    flex: 1;
}

.suggestion-category {
    font-size: 0.8rem;
    color: #666;
    margin-top: 2px;
}

.suggestion-text {
    color: #1a73e8;
}

@media (max-width: 992px) {
    .search-section {
        margin: 0 1rem;
    }
}

@media (max-width: 768px) {
    .header-top {
        flex-wrap: wrap;
    }
    
    .search-section {
        order: 3;
        max-width: 100%;
        margin: 0.5rem 0;
        width: 100%;
    }
}

.search-results-container {
    margin-top: 20px;
    width: 100%;
}

.search-result-card {
    background: white;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.show-all-btn {
    display: block;
    margin: 20px auto;
    padding: 10px 20px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.show-all-btn:hover {
    background: #0056b3;
}
	</style>
		<meta charset="utf-8">
		<meta http-equiv="x-ua-compatible" content="ie=edge">
		<title>Wardrobe</title>
		<meta name="description" content="Hurst – Furniture Store eCommerce HTML Template is a clean and elegant design – suitable for selling flower, cookery, accessories, fashion, high fashion, accessories, digital, kids, watches, jewelries, shoes, kids, furniture, sports….. It has a fully responsive width adjusts automatically to any screen size or resolution.">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<link rel="shortcut icon" type="image/x-icon" href="img/favicon.ico">
		<!-- Place favicon.ico in the root directory -->

		<!-- Google Font -->
		<link href='https://fonts.googleapis.com/css?family=Lato:400,700,900' rel='stylesheet' type='text/css'>
		<link href='https://fonts.googleapis.com/css?family=Bree+Serif' rel='stylesheet' type='text/css'>

	<!-- all css here -->
<!-- bootstrap v3.3.6 css -->
<link rel="stylesheet" href="/user/css/bootstrap.min.css">
<!-- animate css -->
<link rel="stylesheet" href="/user/css/animate.min.css">
<!-- jquery-ui.min css -->
<link rel="stylesheet" href="/user/css/jquery-ui.min.css">
<!-- meanmenu css -->
<link rel="stylesheet" href="/user/css/meanmenu.min.css">
<!-- nivo-slider css -->
<link rel="stylesheet" href="/user/lib/css/nivo-slider.css">
<link rel="stylesheet" href="/user/lib/css/preview.css">
<!-- slick css -->
<link rel="stylesheet" href="/user/css/slick.min.css">
<!-- lightbox css -->
<link rel="stylesheet" href="/user/css/lightbox.min.css">
<!-- material-design-iconic-font css -->
<link rel="stylesheet" href="/user/css/material-design-iconic-font.css">
<!-- All common css of theme -->
<link rel="stylesheet" href="/user/css/default.css">
<!-- style css -->
<link rel="stylesheet" href="/user/style.min.css">
<!-- shortcode css -->
<link rel="stylesheet" href="/user/css/shortcode.css">
<!-- responsive css -->
<link rel="stylesheet" href="/user/css/responsive.css">
<!-- modernizr css -->
<script src="/user/js/vendor/modernizr-3.11.2.min.js"></script>

<!-- Add this at the top of the header partial -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

	</head>
	<body>
		<!-- WRAPPER START -->
		<div class="wrapper">

			<!-- Mobile-header-top Start -->
		
			<!-- Mobile-header-top End -->
			<!-- HEADER-AREA START -->
			<header class="e-commerce-header">
				<div class="header-top">
					<div class="logo-section">
						<a href="/user" class="logo">WARDROBE</a>
					</div>
					<div class="search-section">
						<div class="search-container">
							<form onsubmit="event.preventDefault(); typeof SFSP !== 'undefined' ? SFSP() : typeof sfsp !== 'undefined' ? sfsp() : ''" class="search-form">
								<input 
                                oninput="typeof SFSP !== 'undefined' ? SFSP() : typeof sfsp !== 'undefined' ? sfsp() : ''"
									type="text" 
									name="q" 
									id="searchInput"
									placeholder="Search products..." 
									class="search-input mobile-search"
									data-mobile-placeholder="Search"
									autocomplete="off"
								>
								<button type="button" onclick="typeof SFSP !== 'undefined' ? SFSP() : typeof sfsp !== 'undefined' ? sfsp() : ''" class="search-button">
									<i class="fas fa-search"></i>
								</button>
							</form>
							<div class="search-suggestions" id="searchSuggestions"></div>
						</div>
					</div>
					<nav class="main-nav" id="main-nav">
						<ul class="nav-links">
							
							
				
						</ul>
					</nav>
					<div class="header-actions">
						<a href="/user/wishlist" class="action-link">
							<i class="fas fa-heart"></i>
							<span class="action-badge">0</span>
						</a>
						<a href="/user/cart" class="action-link">
							<i class="fas fa-shopping-cart"></i>
							<span class="action-badge">0</span>
						</a>
						<a href="/user/profile" class="action-link">
							<% if (typeof profilepic !== 'undefined' && profilepic) { %>
								<img  src="<%= profilepic %>" alt="Profile" style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;">
							<% } else { %>
								<i class="fas fa-user"></i>
							<% } %>
						</a>
					</div>
				</div>
			</header>
		</div>

		<script>
            			async function sfsp() {
                      
                            
                const search = document.getElementById('searchInput').value;
                const searchSuggestions = document.getElementById('searchSuggestions');
                
              if(!search){
                searchSuggestions.style.display = 'none';
                return;
              }

                try {
                    const response = await fetch(`/user/search?search=${search}&page=1`);
                    const data = await response.json();
                    
                    if (data.products && data.products.length > 0) {
                        // Show only first 2 results
                        const limitedProducts = data.products.slice(0, 2);
                        let html = limitedProducts.map(product => `
                            <div class="suggestion-item" onclick="window.location.href='/user/product/${product.name}'">
                                <img src="${product.image}" alt="${product.name}" class="suggestion-image">
                                <div class="suggestion-content">
                                    <div class="suggestion-text">${product.name}</div>
                                    <div class="suggestion-category">₹${product.offerPrice || product.price}</div>
                                </div>
                            </div>
                        `).join('');

                        // Add "Show All Results" button
                        html += `
                            <div class="suggestion-item show-all" onclick="SFSP(1)">
                                Show All Results
                            </div>
                        `;

                        searchSuggestions.innerHTML = html;
                        searchSuggestions.style.display = 'block';
                    } else {
                        searchSuggestions.innerHTML = '<div class="suggestion-item no-results">No results found</div>';
                        searchSuggestions.style.display = 'block';
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                    searchSuggestions.style.display = 'none';
                }
            }
	
			window.addEventListener('scroll', function() {
				const header = document.querySelector('.e-commerce-header');
				if (window.scrollY > 50) {
					header.classList.add('scrolled');
				} else {
					header.classList.remove('scrolled');
				}
			});
		</script>

		<script>
			document.addEventListener('DOMContentLoaded', function() {
				const dropdowns = document.querySelectorAll('.dropdown');

				// Handle dropdown toggles in mobile view
				dropdowns.forEach(dropdown => {
					const link = dropdown.querySelector('a');
					link.addEventListener('click', function(e) {
						if(window.innerWidth <= 992) {
							e.preventDefault();
							dropdown.classList.toggle('active');
							const content = dropdown.querySelector('.dropdown-content');
							content.style.display = dropdown.classList.contains('active') ? 'block' : 'none';
						}
					});
				});
			});
		</script>

		<script>
		// Add this to your existing script
		function updatePlaceholder() {
			const searchInput = document.getElementById('searchInput');
			if (window.innerWidth <= 768) {
				searchInput.placeholder = "Search";
			} else {
				searchInput.placeholder = "Search products...";
			}
		}

		// Run on page load and window resize
		window.addEventListener('load', updatePlaceholder);
		window.addEventListener('resize', updatePlaceholder);


        fetch('/user/getwishlist&cartcount')
        .then(response => {
            // Check if the response is actually JSON
            const contentType = response.headers.get('content-type');
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            if (!contentType || !contentType.includes('application/json')) {
                console.warn('Warning: Expected JSON response but received:', contentType);
                // Return default counts to prevent error
                return { wishlistcount: 0, cartcount: 0 };
            }
            return response.json();
        })
        .then(data => {
            // Check if data has the expected properties
            if (data && typeof data === 'object') {
                const wishlistCount = data.wishlistcount || 0;
                const cartCount = data.cartcount || 0;
                document.querySelectorAll('.action-badge')[0].textContent = wishlistCount;
                document.querySelectorAll('.action-badge')[1].textContent = cartCount;
            }
        })
        .catch(error => {
            console.error('Error fetching wishlist and cart counts:', error);
            // Don't update the badges on error - keep existing values
        });
		</script>
	</body>
</html>